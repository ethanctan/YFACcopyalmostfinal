{"ast":null,"code":"'use strict';\n\nvar anObject = require('./_an-object');\n\nvar toObject = require('./_to-object');\n\nvar toLength = require('./_to-length');\n\nvar toInteger = require('./_to-integer');\n\nvar advanceStringIndex = require('./_advance-string-index');\n\nvar regExpExec = require('./_regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n}; // @@replace logic\n\n\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [// `String.prototype.replace` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n  function replace(searchValue, replaceValue) {\n    var O = defined(this);\n    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);\n  }, // `RegExp.prototype[@@replace]` method\n  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n  function (regexp, replaceValue) {\n    var res = maybeCallNative($replace, regexp, this, replaceValue);\n    if (res.done) return res.value;\n    var rx = anObject(regexp);\n    var S = String(this);\n    var functionalReplace = typeof replaceValue === 'function';\n    if (!functionalReplace) replaceValue = String(replaceValue);\n    var global = rx.global;\n\n    if (global) {\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n    }\n\n    var results = [];\n\n    while (true) {\n      var result = regExpExec(rx, S);\n      if (result === null) break;\n      results.push(result);\n      if (!global) break;\n      var matchStr = String(result[0]);\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n    }\n\n    var accumulatedResult = '';\n    var nextSourcePosition = 0;\n\n    for (var i = 0; i < results.length; i++) {\n      result = results[i];\n      var matched = String(result[0]);\n      var position = max(min(toInteger(result.index), S.length), 0);\n      var captures = []; // NOTE: This is equivalent to\n      //   captures = result.slice(1).map(maybeToString)\n      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n      // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\n      for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n\n      var namedCaptures = result.groups;\n\n      if (functionalReplace) {\n        var replacerArgs = [matched].concat(captures, position, S);\n        if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n        var replacement = String(replaceValue.apply(undefined, replacerArgs));\n      } else {\n        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n      }\n\n      if (position >= nextSourcePosition) {\n        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n        nextSourcePosition = position + matched.length;\n      }\n    }\n\n    return accumulatedResult + S.slice(nextSourcePosition);\n  }]; // https://tc39.github.io/ecma262/#sec-getsubstitution\n\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n\n      switch (ch.charAt(0)) {\n        case '$':\n          return '$';\n\n        case '&':\n          return matched;\n\n        case '`':\n          return str.slice(0, position);\n\n        case \"'\":\n          return str.slice(tailPos);\n\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n\n        default:\n          // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n\n          capture = captures[n - 1];\n      }\n\n      return capture === undefined ? '' : capture;\n    });\n  }\n});","map":{"version":3,"names":["anObject","require","toObject","toLength","toInteger","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","undefined","String","defined","REPLACE","$replace","maybeCallNative","replace","searchValue","replaceValue","O","fn","call","regexp","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","n","f"],"sources":["/home/arthur/yfac/node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.replace.js"],"sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}