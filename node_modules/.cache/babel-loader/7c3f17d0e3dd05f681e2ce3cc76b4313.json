{"ast":null,"code":"'use strict'; // https://github.com/zenparsing/es-observable\n\nvar $export = require('./_export');\n\nvar global = require('./_global');\n\nvar core = require('./_core');\n\nvar microtask = require('./_microtask')();\n\nvar OBSERVABLE = require('./_wks')('observable');\n\nvar aFunction = require('./_a-function');\n\nvar anObject = require('./_an-object');\n\nvar anInstance = require('./_an-instance');\n\nvar redefineAll = require('./_redefine-all');\n\nvar hide = require('./_hide');\n\nvar forOf = require('./_for-of');\n\nvar RETURN = forOf.RETURN;\n\nvar getMethod = function (fn) {\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function (subscription) {\n  var cleanup = subscription._c;\n\n  if (cleanup) {\n    subscription._c = undefined;\n    cleanup();\n  }\n};\n\nvar subscriptionClosed = function (subscription) {\n  return subscription._o === undefined;\n};\n\nvar closeSubscription = function (subscription) {\n  if (!subscriptionClosed(subscription)) {\n    subscription._o = undefined;\n    cleanupSubscription(subscription);\n  }\n};\n\nvar Subscription = function (observer, subscriber) {\n  anObject(observer);\n  this._c = undefined;\n  this._o = observer;\n  observer = new SubscriptionObserver(this);\n\n  try {\n    var cleanup = subscriber(observer);\n    var subscription = cleanup;\n\n    if (cleanup != null) {\n      if (typeof cleanup.unsubscribe === 'function') cleanup = function () {\n        subscription.unsubscribe();\n      };else aFunction(cleanup);\n      this._c = cleanup;\n    }\n  } catch (e) {\n    observer.error(e);\n    return;\n  }\n\n  if (subscriptionClosed(this)) cleanupSubscription(this);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe() {\n    closeSubscription(this);\n  }\n});\n\nvar SubscriptionObserver = function (subscription) {\n  this._s = subscription;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value) {\n    var subscription = this._s;\n\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n\n      try {\n        var m = getMethod(observer.next);\n        if (m) return m.call(observer, value);\n      } catch (e) {\n        try {\n          closeSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      }\n    }\n  },\n  error: function error(value) {\n    var subscription = this._s;\n    if (subscriptionClosed(subscription)) throw value;\n    var observer = subscription._o;\n    subscription._o = undefined;\n\n    try {\n      var m = getMethod(observer.error);\n      if (!m) throw value;\n      value = m.call(observer, value);\n    } catch (e) {\n      try {\n        cleanupSubscription(subscription);\n      } finally {\n        throw e;\n      }\n    }\n\n    cleanupSubscription(subscription);\n    return value;\n  },\n  complete: function complete(value) {\n    var subscription = this._s;\n\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      subscription._o = undefined;\n\n      try {\n        var m = getMethod(observer.complete);\n        value = m ? m.call(observer, value) : undefined;\n      } catch (e) {\n        try {\n          cleanupSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      }\n\n      cleanupSubscription(subscription);\n      return value;\n    }\n  }\n});\n\nvar $Observable = function Observable(subscriber) {\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer) {\n    return new Subscription(observer, this._f);\n  },\n  forEach: function forEach(fn) {\n    var that = this;\n    return new (core.Promise || global.Promise)(function (resolve, reject) {\n      aFunction(fn);\n      var subscription = that.subscribe({\n        next: function (value) {\n          try {\n            return fn(value);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  }\n});\nredefineAll($Observable, {\n  from: function from(x) {\n    var C = typeof this === 'function' ? this : $Observable;\n    var method = getMethod(anObject(x)[OBSERVABLE]);\n\n    if (method) {\n      var observable = anObject(method.call(x));\n      return observable.constructor === C ? observable : new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    return new C(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          try {\n            if (forOf(x, false, function (it) {\n              observer.next(it);\n              if (done) return RETURN;\n            }) === RETURN) return;\n          } catch (e) {\n            if (done) throw e;\n            observer.error(e);\n            return;\n          }\n\n          observer.complete();\n        }\n      });\n      return function () {\n        done = true;\n      };\n    });\n  },\n  of: function of() {\n    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];\n\n    return new (typeof this === 'function' ? this : $Observable)(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          for (var j = 0; j < items.length; ++j) {\n            observer.next(items[j]);\n            if (done) return;\n          }\n\n          observer.complete();\n        }\n      });\n      return function () {\n        done = true;\n      };\n    });\n  }\n});\nhide($Observable.prototype, OBSERVABLE, function () {\n  return this;\n});\n$export($export.G, {\n  Observable: $Observable\n});\n\nrequire('./_set-species')('Observable');","map":{"version":3,"names":["$export","require","global","core","microtask","OBSERVABLE","aFunction","anObject","anInstance","redefineAll","hide","forOf","RETURN","getMethod","fn","undefined","cleanupSubscription","subscription","cleanup","_c","subscriptionClosed","_o","closeSubscription","Subscription","observer","subscriber","SubscriptionObserver","unsubscribe","e","error","prototype","_s","next","value","m","call","complete","$Observable","Observable","_f","subscribe","forEach","that","Promise","resolve","reject","from","x","C","method","observable","constructor","done","it","of","i","l","arguments","length","items","Array","j","G"],"sources":["/home/arthur/yfac-2/node_modules/babel-polyfill/node_modules/core-js/modules/es7.observable.js"],"sourcesContent":["'use strict';\n// https://github.com/zenparsing/es-observable\nvar $export = require('./_export');\nvar global = require('./_global');\nvar core = require('./_core');\nvar microtask = require('./_microtask')();\nvar OBSERVABLE = require('./_wks')('observable');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar anInstance = require('./_an-instance');\nvar redefineAll = require('./_redefine-all');\nvar hide = require('./_hide');\nvar forOf = require('./_for-of');\nvar RETURN = forOf.RETURN;\n\nvar getMethod = function (fn) {\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function (subscription) {\n  var cleanup = subscription._c;\n  if (cleanup) {\n    subscription._c = undefined;\n    cleanup();\n  }\n};\n\nvar subscriptionClosed = function (subscription) {\n  return subscription._o === undefined;\n};\n\nvar closeSubscription = function (subscription) {\n  if (!subscriptionClosed(subscription)) {\n    subscription._o = undefined;\n    cleanupSubscription(subscription);\n  }\n};\n\nvar Subscription = function (observer, subscriber) {\n  anObject(observer);\n  this._c = undefined;\n  this._o = observer;\n  observer = new SubscriptionObserver(this);\n  try {\n    var cleanup = subscriber(observer);\n    var subscription = cleanup;\n    if (cleanup != null) {\n      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };\n      else aFunction(cleanup);\n      this._c = cleanup;\n    }\n  } catch (e) {\n    observer.error(e);\n    return;\n  } if (subscriptionClosed(this)) cleanupSubscription(this);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe() { closeSubscription(this); }\n});\n\nvar SubscriptionObserver = function (subscription) {\n  this._s = subscription;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value) {\n    var subscription = this._s;\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      try {\n        var m = getMethod(observer.next);\n        if (m) return m.call(observer, value);\n      } catch (e) {\n        try {\n          closeSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      }\n    }\n  },\n  error: function error(value) {\n    var subscription = this._s;\n    if (subscriptionClosed(subscription)) throw value;\n    var observer = subscription._o;\n    subscription._o = undefined;\n    try {\n      var m = getMethod(observer.error);\n      if (!m) throw value;\n      value = m.call(observer, value);\n    } catch (e) {\n      try {\n        cleanupSubscription(subscription);\n      } finally {\n        throw e;\n      }\n    } cleanupSubscription(subscription);\n    return value;\n  },\n  complete: function complete(value) {\n    var subscription = this._s;\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      subscription._o = undefined;\n      try {\n        var m = getMethod(observer.complete);\n        value = m ? m.call(observer, value) : undefined;\n      } catch (e) {\n        try {\n          cleanupSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      } cleanupSubscription(subscription);\n      return value;\n    }\n  }\n});\n\nvar $Observable = function Observable(subscriber) {\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer) {\n    return new Subscription(observer, this._f);\n  },\n  forEach: function forEach(fn) {\n    var that = this;\n    return new (core.Promise || global.Promise)(function (resolve, reject) {\n      aFunction(fn);\n      var subscription = that.subscribe({\n        next: function (value) {\n          try {\n            return fn(value);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  }\n});\n\nredefineAll($Observable, {\n  from: function from(x) {\n    var C = typeof this === 'function' ? this : $Observable;\n    var method = getMethod(anObject(x)[OBSERVABLE]);\n    if (method) {\n      var observable = anObject(method.call(x));\n      return observable.constructor === C ? observable : new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n    return new C(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          try {\n            if (forOf(x, false, function (it) {\n              observer.next(it);\n              if (done) return RETURN;\n            }) === RETURN) return;\n          } catch (e) {\n            if (done) throw e;\n            observer.error(e);\n            return;\n          } observer.complete();\n        }\n      });\n      return function () { done = true; };\n    });\n  },\n  of: function of() {\n    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];\n    return new (typeof this === 'function' ? this : $Observable)(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          for (var j = 0; j < items.length; ++j) {\n            observer.next(items[j]);\n            if (done) return;\n          } observer.complete();\n        }\n      });\n      return function () { done = true; };\n    });\n  }\n});\n\nhide($Observable.prototype, OBSERVABLE, function () { return this; });\n\n$export($export.G, { Observable: $Observable });\n\nrequire('./_set-species')('Observable');\n"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,cAAD,CAAP,EAAhB;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,QAAD,CAAP,CAAkB,YAAlB,CAAjB;;AACA,IAAIK,SAAS,GAAGL,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIO,UAAU,GAAGP,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAIQ,WAAW,GAAGR,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIS,IAAI,GAAGT,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIU,KAAK,GAAGV,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAIW,MAAM,GAAGD,KAAK,CAACC,MAAnB;;AAEA,IAAIC,SAAS,GAAG,UAAUC,EAAV,EAAc;EAC5B,OAAOA,EAAE,IAAI,IAAN,GAAaC,SAAb,GAAyBT,SAAS,CAACQ,EAAD,CAAzC;AACD,CAFD;;AAIA,IAAIE,mBAAmB,GAAG,UAAUC,YAAV,EAAwB;EAChD,IAAIC,OAAO,GAAGD,YAAY,CAACE,EAA3B;;EACA,IAAID,OAAJ,EAAa;IACXD,YAAY,CAACE,EAAb,GAAkBJ,SAAlB;IACAG,OAAO;EACR;AACF,CAND;;AAQA,IAAIE,kBAAkB,GAAG,UAAUH,YAAV,EAAwB;EAC/C,OAAOA,YAAY,CAACI,EAAb,KAAoBN,SAA3B;AACD,CAFD;;AAIA,IAAIO,iBAAiB,GAAG,UAAUL,YAAV,EAAwB;EAC9C,IAAI,CAACG,kBAAkB,CAACH,YAAD,CAAvB,EAAuC;IACrCA,YAAY,CAACI,EAAb,GAAkBN,SAAlB;IACAC,mBAAmB,CAACC,YAAD,CAAnB;EACD;AACF,CALD;;AAOA,IAAIM,YAAY,GAAG,UAAUC,QAAV,EAAoBC,UAApB,EAAgC;EACjDlB,QAAQ,CAACiB,QAAD,CAAR;EACA,KAAKL,EAAL,GAAUJ,SAAV;EACA,KAAKM,EAAL,GAAUG,QAAV;EACAA,QAAQ,GAAG,IAAIE,oBAAJ,CAAyB,IAAzB,CAAX;;EACA,IAAI;IACF,IAAIR,OAAO,GAAGO,UAAU,CAACD,QAAD,CAAxB;IACA,IAAIP,YAAY,GAAGC,OAAnB;;IACA,IAAIA,OAAO,IAAI,IAAf,EAAqB;MACnB,IAAI,OAAOA,OAAO,CAACS,WAAf,KAA+B,UAAnC,EAA+CT,OAAO,GAAG,YAAY;QAAED,YAAY,CAACU,WAAb;MAA6B,CAArD,CAA/C,KACKrB,SAAS,CAACY,OAAD,CAAT;MACL,KAAKC,EAAL,GAAUD,OAAV;IACD;EACF,CARD,CAQE,OAAOU,CAAP,EAAU;IACVJ,QAAQ,CAACK,KAAT,CAAeD,CAAf;IACA;EACD;;EAAC,IAAIR,kBAAkB,CAAC,IAAD,CAAtB,EAA8BJ,mBAAmB,CAAC,IAAD,CAAnB;AACjC,CAjBD;;AAmBAO,YAAY,CAACO,SAAb,GAAyBrB,WAAW,CAAC,EAAD,EAAK;EACvCkB,WAAW,EAAE,SAASA,WAAT,GAAuB;IAAEL,iBAAiB,CAAC,IAAD,CAAjB;EAA0B;AADzB,CAAL,CAApC;;AAIA,IAAII,oBAAoB,GAAG,UAAUT,YAAV,EAAwB;EACjD,KAAKc,EAAL,GAAUd,YAAV;AACD,CAFD;;AAIAS,oBAAoB,CAACI,SAArB,GAAiCrB,WAAW,CAAC,EAAD,EAAK;EAC/CuB,IAAI,EAAE,SAASA,IAAT,CAAcC,KAAd,EAAqB;IACzB,IAAIhB,YAAY,GAAG,KAAKc,EAAxB;;IACA,IAAI,CAACX,kBAAkB,CAACH,YAAD,CAAvB,EAAuC;MACrC,IAAIO,QAAQ,GAAGP,YAAY,CAACI,EAA5B;;MACA,IAAI;QACF,IAAIa,CAAC,GAAGrB,SAAS,CAACW,QAAQ,CAACQ,IAAV,CAAjB;QACA,IAAIE,CAAJ,EAAO,OAAOA,CAAC,CAACC,IAAF,CAAOX,QAAP,EAAiBS,KAAjB,CAAP;MACR,CAHD,CAGE,OAAOL,CAAP,EAAU;QACV,IAAI;UACFN,iBAAiB,CAACL,YAAD,CAAjB;QACD,CAFD,SAEU;UACR,MAAMW,CAAN;QACD;MACF;IACF;EACF,CAhB8C;EAiB/CC,KAAK,EAAE,SAASA,KAAT,CAAeI,KAAf,EAAsB;IAC3B,IAAIhB,YAAY,GAAG,KAAKc,EAAxB;IACA,IAAIX,kBAAkB,CAACH,YAAD,CAAtB,EAAsC,MAAMgB,KAAN;IACtC,IAAIT,QAAQ,GAAGP,YAAY,CAACI,EAA5B;IACAJ,YAAY,CAACI,EAAb,GAAkBN,SAAlB;;IACA,IAAI;MACF,IAAImB,CAAC,GAAGrB,SAAS,CAACW,QAAQ,CAACK,KAAV,CAAjB;MACA,IAAI,CAACK,CAAL,EAAQ,MAAMD,KAAN;MACRA,KAAK,GAAGC,CAAC,CAACC,IAAF,CAAOX,QAAP,EAAiBS,KAAjB,CAAR;IACD,CAJD,CAIE,OAAOL,CAAP,EAAU;MACV,IAAI;QACFZ,mBAAmB,CAACC,YAAD,CAAnB;MACD,CAFD,SAEU;QACR,MAAMW,CAAN;MACD;IACF;;IAACZ,mBAAmB,CAACC,YAAD,CAAnB;IACF,OAAOgB,KAAP;EACD,CAlC8C;EAmC/CG,QAAQ,EAAE,SAASA,QAAT,CAAkBH,KAAlB,EAAyB;IACjC,IAAIhB,YAAY,GAAG,KAAKc,EAAxB;;IACA,IAAI,CAACX,kBAAkB,CAACH,YAAD,CAAvB,EAAuC;MACrC,IAAIO,QAAQ,GAAGP,YAAY,CAACI,EAA5B;MACAJ,YAAY,CAACI,EAAb,GAAkBN,SAAlB;;MACA,IAAI;QACF,IAAImB,CAAC,GAAGrB,SAAS,CAACW,QAAQ,CAACY,QAAV,CAAjB;QACAH,KAAK,GAAGC,CAAC,GAAGA,CAAC,CAACC,IAAF,CAAOX,QAAP,EAAiBS,KAAjB,CAAH,GAA6BlB,SAAtC;MACD,CAHD,CAGE,OAAOa,CAAP,EAAU;QACV,IAAI;UACFZ,mBAAmB,CAACC,YAAD,CAAnB;QACD,CAFD,SAEU;UACR,MAAMW,CAAN;QACD;MACF;;MAACZ,mBAAmB,CAACC,YAAD,CAAnB;MACF,OAAOgB,KAAP;IACD;EACF;AApD8C,CAAL,CAA5C;;AAuDA,IAAII,WAAW,GAAG,SAASC,UAAT,CAAoBb,UAApB,EAAgC;EAChDjB,UAAU,CAAC,IAAD,EAAO6B,WAAP,EAAoB,YAApB,EAAkC,IAAlC,CAAV,CAAkDE,EAAlD,GAAuDjC,SAAS,CAACmB,UAAD,CAAhE;AACD,CAFD;;AAIAhB,WAAW,CAAC4B,WAAW,CAACP,SAAb,EAAwB;EACjCU,SAAS,EAAE,SAASA,SAAT,CAAmBhB,QAAnB,EAA6B;IACtC,OAAO,IAAID,YAAJ,CAAiBC,QAAjB,EAA2B,KAAKe,EAAhC,CAAP;EACD,CAHgC;EAIjCE,OAAO,EAAE,SAASA,OAAT,CAAiB3B,EAAjB,EAAqB;IAC5B,IAAI4B,IAAI,GAAG,IAAX;IACA,OAAO,KAAKvC,IAAI,CAACwC,OAAL,IAAgBzC,MAAM,CAACyC,OAA5B,EAAqC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;MACrEvC,SAAS,CAACQ,EAAD,CAAT;MACA,IAAIG,YAAY,GAAGyB,IAAI,CAACF,SAAL,CAAe;QAChCR,IAAI,EAAE,UAAUC,KAAV,EAAiB;UACrB,IAAI;YACF,OAAOnB,EAAE,CAACmB,KAAD,CAAT;UACD,CAFD,CAEE,OAAOL,CAAP,EAAU;YACViB,MAAM,CAACjB,CAAD,CAAN;YACAX,YAAY,CAACU,WAAb;UACD;QACF,CAR+B;QAShCE,KAAK,EAAEgB,MATyB;QAUhCT,QAAQ,EAAEQ;MAVsB,CAAf,CAAnB;IAYD,CAdM,CAAP;EAeD;AArBgC,CAAxB,CAAX;AAwBAnC,WAAW,CAAC4B,WAAD,EAAc;EACvBS,IAAI,EAAE,SAASA,IAAT,CAAcC,CAAd,EAAiB;IACrB,IAAIC,CAAC,GAAG,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoCX,WAA5C;IACA,IAAIY,MAAM,GAAGpC,SAAS,CAACN,QAAQ,CAACwC,CAAD,CAAR,CAAY1C,UAAZ,CAAD,CAAtB;;IACA,IAAI4C,MAAJ,EAAY;MACV,IAAIC,UAAU,GAAG3C,QAAQ,CAAC0C,MAAM,CAACd,IAAP,CAAYY,CAAZ,CAAD,CAAzB;MACA,OAAOG,UAAU,CAACC,WAAX,KAA2BH,CAA3B,GAA+BE,UAA/B,GAA4C,IAAIF,CAAJ,CAAM,UAAUxB,QAAV,EAAoB;QAC3E,OAAO0B,UAAU,CAACV,SAAX,CAAqBhB,QAArB,CAAP;MACD,CAFkD,CAAnD;IAGD;;IACD,OAAO,IAAIwB,CAAJ,CAAM,UAAUxB,QAAV,EAAoB;MAC/B,IAAI4B,IAAI,GAAG,KAAX;MACAhD,SAAS,CAAC,YAAY;QACpB,IAAI,CAACgD,IAAL,EAAW;UACT,IAAI;YACF,IAAIzC,KAAK,CAACoC,CAAD,EAAI,KAAJ,EAAW,UAAUM,EAAV,EAAc;cAChC7B,QAAQ,CAACQ,IAAT,CAAcqB,EAAd;cACA,IAAID,IAAJ,EAAU,OAAOxC,MAAP;YACX,CAHQ,CAAL,KAGGA,MAHP,EAGe;UAChB,CALD,CAKE,OAAOgB,CAAP,EAAU;YACV,IAAIwB,IAAJ,EAAU,MAAMxB,CAAN;YACVJ,QAAQ,CAACK,KAAT,CAAeD,CAAf;YACA;UACD;;UAACJ,QAAQ,CAACY,QAAT;QACH;MACF,CAbQ,CAAT;MAcA,OAAO,YAAY;QAAEgB,IAAI,GAAG,IAAP;MAAc,CAAnC;IACD,CAjBM,CAAP;EAkBD,CA5BsB;EA6BvBE,EAAE,EAAE,SAASA,EAAT,GAAc;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGC,SAAS,CAACC,MAAzB,EAAiCC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,CAAV,CAA9C,EAA4DD,CAAC,GAAGC,CAAhE,GAAoEG,KAAK,CAACJ,CAAD,CAAL,GAAWE,SAAS,CAACF,CAAC,EAAF,CAApB;;IACpE,OAAO,KAAK,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoClB,WAAzC,EAAsD,UAAUb,QAAV,EAAoB;MAC/E,IAAI4B,IAAI,GAAG,KAAX;MACAhD,SAAS,CAAC,YAAY;QACpB,IAAI,CAACgD,IAAL,EAAW;UACT,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACD,MAA1B,EAAkC,EAAEG,CAApC,EAAuC;YACrCrC,QAAQ,CAACQ,IAAT,CAAc2B,KAAK,CAACE,CAAD,CAAnB;YACA,IAAIT,IAAJ,EAAU;UACX;;UAAC5B,QAAQ,CAACY,QAAT;QACH;MACF,CAPQ,CAAT;MAQA,OAAO,YAAY;QAAEgB,IAAI,GAAG,IAAP;MAAc,CAAnC;IACD,CAXM,CAAP;EAYD;AA3CsB,CAAd,CAAX;AA8CA1C,IAAI,CAAC2B,WAAW,CAACP,SAAb,EAAwBzB,UAAxB,EAAoC,YAAY;EAAE,OAAO,IAAP;AAAc,CAAhE,CAAJ;AAEAL,OAAO,CAACA,OAAO,CAAC8D,CAAT,EAAY;EAAExB,UAAU,EAAED;AAAd,CAAZ,CAAP;;AAEApC,OAAO,CAAC,gBAAD,CAAP,CAA0B,YAA1B"},"metadata":{},"sourceType":"script"}