{"ast":null,"code":"'use strict';\n\nvar anObject = require('./_an-object');\n\nvar sameValue = require('./_same-value');\n\nvar regExpExec = require('./_regexp-exec-abstract'); // @@search logic\n\n\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [// `String.prototype.search` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.search\n  function search(regexp) {\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, // `RegExp.prototype[@@search]` method\n  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n  function (regexp) {\n    var res = maybeCallNative($search, regexp, this);\n    if (res.done) return res.value;\n    var rx = anObject(regexp);\n    var S = String(this);\n    var previousLastIndex = rx.lastIndex;\n    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n    var result = regExpExec(rx, S);\n    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n    return result === null ? -1 : result.index;\n  }];\n});","map":{"version":3,"names":["anObject","require","sameValue","regExpExec","defined","SEARCH","$search","maybeCallNative","search","regexp","O","fn","undefined","call","RegExp","String","res","done","value","rx","S","previousLastIndex","lastIndex","result","index"],"sources":["/home/arthur/yfac/node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.search.js"],"sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAAxB,C,CAEA;;;AACAA,OAAO,CAAC,eAAD,CAAP,CAAyB,QAAzB,EAAmC,CAAnC,EAAsC,UAAUG,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,eAApC,EAAqD;EACzF,OAAO,CACL;EACA;EACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;IACtB,IAAIC,CAAC,GAAGN,OAAO,CAAC,IAAD,CAAf;IACA,IAAIO,EAAE,GAAGF,MAAM,IAAIG,SAAV,GAAsBA,SAAtB,GAAkCH,MAAM,CAACJ,MAAD,CAAjD;IACA,OAAOM,EAAE,KAAKC,SAAP,GAAmBD,EAAE,CAACE,IAAH,CAAQJ,MAAR,EAAgBC,CAAhB,CAAnB,GAAwC,IAAII,MAAJ,CAAWL,MAAX,EAAmBJ,MAAnB,EAA2BU,MAAM,CAACL,CAAD,CAAjC,CAA/C;EACD,CAPI,EAQL;EACA;EACA,UAAUD,MAAV,EAAkB;IAChB,IAAIO,GAAG,GAAGT,eAAe,CAACD,OAAD,EAAUG,MAAV,EAAkB,IAAlB,CAAzB;IACA,IAAIO,GAAG,CAACC,IAAR,EAAc,OAAOD,GAAG,CAACE,KAAX;IACd,IAAIC,EAAE,GAAGnB,QAAQ,CAACS,MAAD,CAAjB;IACA,IAAIW,CAAC,GAAGL,MAAM,CAAC,IAAD,CAAd;IACA,IAAIM,iBAAiB,GAAGF,EAAE,CAACG,SAA3B;IACA,IAAI,CAACpB,SAAS,CAACmB,iBAAD,EAAoB,CAApB,CAAd,EAAsCF,EAAE,CAACG,SAAH,GAAe,CAAf;IACtC,IAAIC,MAAM,GAAGpB,UAAU,CAACgB,EAAD,EAAKC,CAAL,CAAvB;IACA,IAAI,CAAClB,SAAS,CAACiB,EAAE,CAACG,SAAJ,EAAeD,iBAAf,CAAd,EAAiDF,EAAE,CAACG,SAAH,GAAeD,iBAAf;IACjD,OAAOE,MAAM,KAAK,IAAX,GAAkB,CAAC,CAAnB,GAAuBA,MAAM,CAACC,KAArC;EACD,CApBI,CAAP;AAsBD,CAvBD"},"metadata":{},"sourceType":"script"}