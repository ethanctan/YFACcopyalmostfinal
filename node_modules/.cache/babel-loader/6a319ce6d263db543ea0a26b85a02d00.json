{"ast":null,"code":"import _toConsumableArray from \"/home/arthur/yfac-2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/arthur/yfac-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/arthur/yfac-2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { useEffect as l, useRef as a } from \"react\";\nimport { useEvent as c } from \"./use-event.js\";\n\nfunction m(o, t) {\n  var r = a([]),\n      e = c(o);\n  l(function () {\n    var _iterator = _createForOfIteratorHelper(t.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            u = _step$value[0],\n            f = _step$value[1];\n\n        if (r.current[u] !== f) {\n          var i = e(t);\n          return r.current = t, i;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }, [e].concat(_toConsumableArray(t)));\n}\n\nexport { m as useWatch };","map":null,"metadata":{},"sourceType":"module"}